service: product-service
frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-central-1
  stage: dev
  httpApi:
    cors: true
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_NAME: ${env:DB_NAME}
    DB_USER: ${env:DB_USER}
    DB_SECRET: ${env:DB_SECRET}
  vpc:
    securityGroupIds:
      - ${env:SG_ID}
    subnetIds:
      - ${env:SUBNET_ID_1}
      - ${env:SUBNET_ID_2}
  iam:
    role:
      statements:
        # Allow functions to call CreateNetworkInterface on EC2 and connect to DB VPC
        - Effect: Allow
          Action:
            - 'ec2:DescribeNetworkInterfaces'
            - 'ec2:CreateNetworkInterface'
            - 'ec2:DeleteNetworkInterface'
            - 'ec2:DescribeInstances'
            - 'ec2:AttachNetworkInterface'
          Resource: '*'

functions:
  ping:
    handler: handler.ping
    events:
      - http:
          path: products/ping
          method: get
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: products/{productId}
          method: get
          request:
            parameters:
              paths:
                productId: true
  getAllProducts:
    handler: handler.getAllProducts
    events:
      - http:
          path: products
          method: get
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: post
          cors: true

